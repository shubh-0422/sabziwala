{"ast":null,"code":"import firebase, { initializeApp } from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyDnIXnC4cKsCg8cVpv-EmJOrlB_BsdpJHQ\",\n  authDomain: \"sabziwala-db.firebaseapp.com\",\n  databaseURL: \"https://sabziwala-db.firebaseio.com\",\n  projectId: \"sabziwala-db\",\n  storageBucket: \"sabziwala-db.appspot.com\",\n  messagingSenderId: \"946265939742\",\n  appId: \"1:946265939742:web:b2e90ee5ad879b18c9f30f\",\n  measurementId: \"G-446656E36N\"\n}; // export const createUser = async (userAuth, additionalData) => {\n// };\n\nexport const createuser = async (userAuth, additionData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  } // return userRef;\n  // if (!userAuth) return;\n  // let userid=userAuth.uid;\n  // const userRef = firestore.doc('user/'+userid);\n  // const snapShot = await userRef.get();\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionData,\n  //     });\n  //   } catch (error) {\n  //     console.log(\"error\", error.message);\n  //   }\n  //   return userRef;\n  // }\n\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/shubh/Desktop/sabziwala/src/firebase/firebase.utils.js"],"names":["firebase","initializeApp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createuser","userAuth","additionData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","additionalData","error","console","log","message","auth","provider","GoogleAuthProvider","addScope","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,aAAnB,QAAwC,cAAxC;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,8BAFC;AAGbC,EAAAA,WAAW,EAAE,qCAHA;AAIbC,EAAAA,SAAS,EAAE,cAJE;AAKbC,EAAAA,aAAa,EAAE,0BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAWA;AAEA;;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,YAAjB,KAAkC;AACxD,MAAI,CAACD,QAAL,EAAe;AAEjB,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGG;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF,GApByD,CAsB1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,CA1CM;AA2CP9B,QAAQ,CAACC,aAAT,CAAuBC,MAAvB;AACA,OAAO,MAAM6B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,QAAT,CAAkB,mDAAlB;AAEAF,QAAQ,CAACG,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBN,QAArB,CAA/B;AACP,eAAehC,QAAf","sourcesContent":["import firebase, { initializeApp } from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDnIXnC4cKsCg8cVpv-EmJOrlB_BsdpJHQ\",\r\n  authDomain: \"sabziwala-db.firebaseapp.com\",\r\n  databaseURL: \"https://sabziwala-db.firebaseio.com\",\r\n  projectId: \"sabziwala-db\",\r\n  storageBucket: \"sabziwala-db.appspot.com\",\r\n  messagingSenderId: \"946265939742\",\r\n  appId: \"1:946265939742:web:b2e90ee5ad879b18c9f30f\",\r\n  measurementId: \"G-446656E36N\",\r\n};\r\n\r\n// export const createUser = async (userAuth, additionalData) => {\r\n\r\n// };\r\n\r\nexport const createuser = async (userAuth, additionData) => {\r\n    if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n\r\n  // return userRef;\r\n  // if (!userAuth) return;\r\n  // let userid=userAuth.uid;\r\n  // const userRef = firestore.doc('user/'+userid);\r\n  // const snapShot = await userRef.get();\r\n  // if (!snapShot.exists) {\r\n  //   const { displayName, email } = userAuth;\r\n  //   const createdAt = new Date();\r\n  //   try {\r\n  //     await userRef.set({\r\n  //       displayName,\r\n  //       email,\r\n  //       createdAt,\r\n  //       ...additionData,\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(\"error\", error.message);\r\n  //   }\r\n  //   return userRef;\r\n  // }\r\n};\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.addScope(\"https://www.googleapis.com/auth/contacts.readonly\");\r\n\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}